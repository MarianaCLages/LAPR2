@startuml
'https://plantuml.com/sequence-diagram
autonumber
actor Administrator as A
participant ":RegisterEmployeeUI" as UI
participant ":RegisterEmployeeController" as CTRL
participant ":Company" as COMPANY
participant ":EmployeeStore" as EmployeeStore
participant "em:Employee" as Employee
participant "em:Specialist Doctor" as SpecialistDoctor
participant ":RoleStore" as RoleStore
participant ":AuthFacade" as AUTH



activate A

A -> UI: ask to register a new employee
activate UI


deactivate CTRL

UI -> CTRL : getRoleList()

activate CTRL
CTRL -> COMPANY : catList = getRoleList()
deactivate CTRL
activate COMPANY




COMPANY -> RoleStore  : catList = getRoleList()

activate RoleStore
deactivate RoleStore
deactivate COMPANY

UI --> A: show role list
deactivate UI
A -> UI: select a role
activate UI

UI --> A :requests employee data(ID,name, address, phoneNumber, email,  "SOC", doctorIndexNumber, role)

A -> UI : types requested data
activate CTRL





UI -> CTRL : CreateEmployee(ID,name, address, phoneNumber, email,  "SOC", doctorIndexNumber, role)
CTRL -> COMPANY : eStore = getEmployeeStore()

activate COMPANY
deactivate COMPANY

CTRL -> EmployeeStore: CreateEmployee(Name, Address, Phone Number, E-Mail,  "SOC", Role)

activate EmployeeStore
alt role = SpecialistDoctor
EmployeeStore -> SpecialistDoctor **: emp = Employee(ID,name, address, phoneNumber, email,  "SOC", doctorIndexNumber, role)
else other role
EmployeeStore -> Employee **: emp = Employee(ID,name, address, phoneNumber, email,  "SOC", role)



end

deactivate EmployeeStore





CTRL -> EmployeeStore: validateEmployee(em)

activate EmployeeStore
deactivate EmployeeStore

deactivate CTRL

UI --> A : shows all data and requests confirmation
deactivate UI

A -> UI : confirms the data
activate UI





' -------- Register --------

UI-> CTRL : saveClient()
activate CTRL
CTRL -> EmployeeStore: saveEmployee(em)
activate EmployeeStore
EmployeeStore -> EmployeeStore : validateEmployee(em)
activate EmployeeStore
deactivate EmployeeStore
EmployeeStore -> EmployeeStore : saveEmployee(em)
activate EmployeeStore
deactivate EmployeeStore
deactivate EmployeeStore

CTRL -> EmployeeStore : addUserWithRole(name,email,roleId)
deactivate CTRL

activate EmployeeStore
EmployeeStore -> Employee : getPassword();
activate Employee
deactivate Employee

EmployeeStore -> AUTH :addUserWithRole( name, email, password, roleId)
deactivate EmployeeStore

activate AUTH
deactivate AUTH
' -------- Register --------

deactivate EmployeeStore





deactivate CTRL
UI --> A : Informs operation success








@enduml