@startuml
autonumber

actor Receptionist as R
participant ":RegisterClientUI" as UI
participant ":RegisterClientController" as CTRL
participant ":AuthFacade" as Auth
participant ":UserSession" as User
participant ":Company" as COMPANY
participant "store:ClientStore" as S
participant ": Client" as C
participant ":RoleStore" as RoleStore

activate R
R -> UI: asks to register a new client
activate UI





UI -> CTRL : getRoleList()

activate CTRL
CTRL -> COMPANY : catList = getRoleList()

activate COMPANY

COMPANY -> RoleStore : catList = getRoleList()
activate RoleStore
deactivate RoleStore
deactivate COMPANY
deactivate CTRL
UI --> R: asks to select role
deactivate UI
R -> UI: selects role

activate UI




UI --> R: requests Client's registration data (citizen card number, NHS number,\n birth date, sex, TIF number, phone number, e-mail, name)

deactivate UI
R -> UI: types data
activate UI
UI -> CTRL : getStore()
activate CTRL
CTRL -> COMPANY: store = getStore()
activate COMPANY
COMPANY --> S**: create
deactivate COMPANY
CTRL <- UI: CreateClient(citizen card number, NHS number, birth date, sex,\n TIF number, phone number, e-mail, name)
CTRL -> S:CreateClient(citizen card number, NHS number, birth date, sex,\n TIF number, phone number, e-mail, name)
activate S
S --> C**: c =Client(citizen card number, NHS number, birth date, sex,\n TIF number, phone number, e-mail, name)

deactivate S


deactivate CTRL

R <-- UI: Shows data and requests confirmation
deactivate UI
R -> UI: confirms data
activate UI
UI-> CTRL : saveClient()
activate CTRL
CTRL -> S: saveClient(c)
activate S
S -> S : validateClient(c)
activate S
deactivate S
S -> S : saveClient(c)
activate S
deactivate S
deactivate S
deactivate CTRL

UI -> CTRL : addUserWithRole(name, email, password)
activate CTRL

CTRL -> S: existsUser(email)
activate S
CTRL -> S: addUserWithRole(name, email, password)
deactivate S

UI --> R : Informs operation success
deactivate CTRL
deactivate UI
deactivate R

@enduml
