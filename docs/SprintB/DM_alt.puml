@startuml

class Covid19Report{
Covid-19 tests performed;
Positive Results to Covid-19 Tests
Number of Covid-19 Cases Per Day
Number of Covid-19 Cases Per Week
Number of Covid-19 Cases Per Month
Number of Covid-19 Cases Per Year
}

class Test{
Client;
Test ID;
Type of Test;
}

class Sample{
Test ID;
Type of Sample;
}

class TypeTest{
Test ID;
}


class Client{
Name;
Citizen card Number;
National Healthcare Service Number
Birth date;
Sex;
Tax Identification Number;
Phone;
E-mail;
}

class Receptionist{
Employee ID;
Organization Role;
Name;
Address;
Phone Number;
E-Mail;
Standard Occupational Classification "SOC";
}

class MedicalLabTechnician{
Employee ID;
Organization Role;
Name;
Address;
Phone Number;
E-Mail;
Standard Occupational Classification "SOC";
}

class SpecialistDoctor{
Employee ID;
Organization Role;
Name;
Address;
Phone Number;
E-Mail;
Standard Occupational Classification "SOC";
Doctor Index Number;
}

class Administrator{
Employee ID;
Organization Role;
Name;
Address;
Phone Number;
E-Mail;
Standard Occupational Classification "SOC";
}

class ClinicalChemistryTechnologist{
Employee ID;
Organization Role;
Name;
Address;
Phone Number;
E-Mail;
Standard Occupational Classification "SOC";
}

class LaboratoryCoordinator{
Employee ID;
Organization Role;
Name;
Address;
Phone Number;
E-Mail;
Standard Occupational Classification "SOC";
}

class ClinicalAnalysisLaboratory{
Laboratory ID;
Name;
Address;
Phone Number;
TIN number;
}

class ChemicalLaboratory{
Name;
Address;
Phone Number;
TIN number;
}

class CompanyHeadquarters{
Address;
Phone Number;
E-Mail;
}


class TypeSample{
Sample ID;
}

class Company{
Name
}

class BarcodeExternalAPI{
Barcode Number;
}

class LabOrder{
Client;
Doctor;
Type of Test;
Parameters;
}

class Results{
TestID;
Client;
}

class Notification{
SMS;
E-mail;
}

class Report{
TestID;
Client;
Doctor's text;
}

class AutomaticValidationModule{
Validation;
}

class Parameters{
Value;
}

Company "1" -up- "1" Covid19Report: sends to NHS >
Company "1" -left- "1" CompanyHeadquarters: owns >
Company "1" -- "*" ClinicalAnalysisLaboratory: owns >
Company "1" -right- "1" ChemicalLaboratory: owns >
Receptionist "*" -up- "*" ClinicalAnalysisLaboratory: works at >
MedicalLabTechnician "1" -up- "*" ClinicalAnalysisLaboratory: works at >
ClinicalChemistryTechnologist "1" -up- "*" ChemicalLaboratory: works at >
SpecialistDoctor "1" -up- "*" ChemicalLaboratory: works at >
LaboratoryCoordinator "1" -up- "*" ClinicalAnalysisLaboratory: works at >
Administrator "*" -up- "1" CompanyHeadquarters: works at >
Receptionist "1" -- "*" Client: registers >
Receptionist "1" -- "*" LabOrder: registers >
MedicalLabTechnician "1" -- "*" Sample: collects >
MedicalLabTechnician "1" -- "*" Sample: records >
ClinicalChemistryTechnologist "1" -- "*" Sample: receives >
ClinicalChemistryTechnologist "1" -- "*" Results: records >
SpecialistDoctor "1" -- "1" AutomaticValidationModule : uses >
AutomaticValidationModule "1" -- "1" Results: validates >
SpecialistDoctor "1" -- "*" Report: writes >
LaboratoryCoordinator "1" -- "*" Report: validates >
Client "1" -- "1" Notification: receives >
Test "1" -- "*" Sample: collects >
Client "1" -- "*" Test: requires >
Test "*" -- "1" TypeTest: is of >
Test "*" -- "1..*" Parameters: requestes >
Parameters "*" -- "1" Category: presented under >
Category "*" -- "1" Administrator: created by >
Sample "*" -- "1" TypeSample: is of >
Sample "*" -- BarcodeExternalAPI: is associated to a >

Administrator "1" -up- "*" ClinicalAnalysisLaboratory: registers >
Administrator "1" -left- "*" Receptionist: registers >
Administrator "1" -left- "*" MedicalLabTechnician: registers >
Administrator "1" -left- "*" LaboratoryCoordinator: registers >
Administrator "1" -left- "*" SpecialistDoctor: registers >
Administrator "1" -left- "*" ClinicalChemistryTechnologist: registers >

@enduml