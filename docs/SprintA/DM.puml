@startuml

class ChemicalAnalysis{
}

class Test{
Client;
Test ID;
Type of Test;
}

class Sample{
Test ID;
Type of Sample;
}

class TypeTest{
Test ID;
}


class Client{
Name;
Citizen card Number;
National Healthcare Service Number
Birth date;
Sex;
Tax Identification Number;
Phone;
E-mail;
}

class Receptionist{
Employee ID;
Organization Role;
Name;
Address;
Phone Number;
E-Mail;
Standard Occupational Classification "SOC";
}

class MedicalLabTechnician{
Employee ID;
Organization Role;
Name;
Address;
Phone Number;
E-Mail;
Standard Occupational Classification "SOC";
}

class SpecialistDoctor{
Employee ID;
Organization Role;
Name;
Address;
Phone Number;
E-Mail;
Standard Occupational Classification "SOC";
Doctor Index Number;
}

class Administrator{
Employee ID;
Organization Role;
Name;
Address;
Phone Number;
E-Mail;
Standard Occupational Classification "SOC";
}

class ClinicalChemistryTechnologist{
Employee ID;
Organization Role;
Name;
Address;
Phone Number;
E-Mail;
Standard Occupational Classification "SOC";
}

class LaboratoryCoordinator{
Employee ID;
Organization Role;
Name;
Address;
Phone Number;
E-Mail;
Standard Occupational Classification "SOC";
}

class ClinicalAnalysisLaboratory{
Laboratory ID;
Name;
Address;
Phone Number;
TIN number;
}

class ChemicalLaboratory{
Name;
Address;
Phone Number;
TIN number;
}

class CompanyHeadquarters{
Address;
Phone Number;
E-Mail;
}

class ChemicalAnalysis{
Client;
}


class TypeSample{
Sample ID;
}

class Company{
}

class BarcodeExternalAPI{
Barcode Number;
}

class LabOrder{
Client;
Doctor;
Type of Test;
Parameters;
}

class Results{
TestID;
Client;
}
class Notification{
SMS;
E-mail;
}

class Report{
TestID;
Client;
Doctor's text;
}

class AutomaticValidationModule{
Logical Value;
}

class Parameters{
Value;
}


LaboratoryCoordinator "1" -- "*" Report: verifies >
Company "1" -- "*" ClinicalAnalysisLaboratory: owns >
Company "1" -- "1" ChemicalLaboratory: owns >
Company "1" -- "1" CompanyHeadquarters: owns >
Company "1" -- "*" Receptionist: employs  >
Company "1" -- "*" MedicalLabTechnician: employs >
Company "1" -- "*" SpecialistDoctor: employs >
Company "1" -- "*" Administrator: employs >
Company "1" -- "*" ClinicalChemistryTechnologist: employs >
Company "1" -- "*" LaboratoryCoordinator: employs >
Client "1" -- "1" LabOrder: to execute the test needs a  >
TypeSample "1" -- "1" Sample: as a <
ChemicalLaboratory "1" -- "1" CompanyHeadquarters: is located in >
Receptionist "*" -- "1" ClinicalAnalysisLaboratory: works on >
Receptionist "1" -- "*" Test: register in application >
Receptionist "1" -- "*" Client: register in application >
MedicalLabTechnician "1" -- "*" Sample: collects and records >
SpecialistDoctor "1" -- "1" Report: writes >
SpecialistDoctor "1" -- "1" Results: analyse >
Sample "*" -- "1" ChemicalLaboratory: are sent >
ClinicalChemistryTechnologist "1" -- "1" Sample : analyse >
ClinicalChemistryTechnologist "1" -- "1" Results : records >
ClinicalChemistryTechnologist "*" -- "1" ChemicalLaboratory : works on >
TypeTest "*" -- "*" Test : as a <
Sample "1" -- "1" Test : is used in >
ChemicalAnalysis "*" -- "1" ChemicalLaboratory : take place in >
Sample "1" -- BarcodeExternalAPI : is identified using >
Report "1" -- Notification : is sent by >
Results "1" -- Notification : is sent by >
Notification "1" -- Client : delivered to >
LaboratoryCoordinator "1" -- AutomaticValidationModule : uses >
AutomaticValidationModule "1" -- Results : Validate >
Test "1" -- Parameters : has >
MedicalLabTechnician "1" -- ClinicalAnalysisLaboratory : works on >



@enduml